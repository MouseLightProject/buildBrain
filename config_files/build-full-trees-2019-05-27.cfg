whole_brain_h5_p_map_file_path = '/nrs/mouselight/cluster/classifierOutputs/2019-05-27/whole-brain-p-map-as-h5/2019-05-27-whole-brain-p-map.h5'
whole_brain_h5_p_map_dataset_path = '/prob0'
whole_brain_h5_p_map_properties_group_path = '/prob0_props'
#inputh5 = '/nrs/mouselight/cluster/classifierOutputs/2019-05-27/whole-brain-p-map-take-2/2019-05-27-whole-brain-p-map.h5'
#h5prob = '/prob0'
#h5probprops = '/prob0_props'
skelfolder = '/nrs/mouselight/cluster/classifierOutputs/2019-05-27/skeletonization'

outfolder = '/nrs/mouselight/cluster/classifierOutputs/2019-05-27/build-brain-output/full-as-mats'

writefull = 1
writefrag = 1

viz = 0
debug = 0

sizethreshold = 100
# decide crrop size from data as function of chunksize#cropSize = 1000

# overlap of running windows on skeletonization
fullh = 15

#    lengthThr = 10;% (um) lengthThr for each leaf branch to decide to prune
#    largesampling = 200;%(um) make it more sparse for larger segments
lengthThr = 10
largesampling = 200
# sampling options are 'uni' [default] for uniform sampling (for 3D) and 'curv' for curvature weighted sampling (for 2D)
sampling = 'uni'
samplingInterval = 5

#post segmentation parameters
tag = ''
prune = 1
filterGraph = 0
graph2branch = 1

maximum_core_count_desired = inf
